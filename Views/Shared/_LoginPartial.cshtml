@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <span class="nav-link text-dark">
            Hello, @(User.Identity?.Name ?? "Guest")!
        </span>
    </li>

    <li class="nav-item">
        <form class="form-inline" asp-area=""  asp-controller="Quiz" asp-action="Index">
            <button type="submit" class="nav-link btn btn-link text-dark">Take Quiz</button>
        </form>
    </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="" asp-controller="Quiz" asp-action="Index1">
                <button type="submit" class="nav-link btn btn-link text-dark">LeaderBoard</button>
            </form>
        </li>
    <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Identity/Account/Logout", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
